const spell = require('spell-checker-js');

spell.load('en');

dictionary = [
  'html',
  'javascript',
  'http',
  'mozilla',
  'https',
  'html5',
  'href',
  'mozilla',
  'regexp',
  'findindex',
  'typeof',
  'destructuring',
  'touppercase',
  'tolowercase',
  'falsy',
  'encodeuricomponent',
  'config',
  'foreach',
  'matchmedia',
  'args',
  'eventtarget',
  'addeventlistener',
  'removeEventListener',
  'flexbox',
  'hasownproperty',
  'concat',
  'padstart',
  'padend',
  'wikipedia',
  'wiki',
  'json',
  'getday',
  'getmonth',
  'getyear',
  'getfullyear',
  'tostring',
  'htmlstring',
  'innertext',
  'appendchild',
  'insertbefore',
  'removechild',
  'replacechild',
  'setattribute',
  'removeattribute',
  'setattributenode',
  'removeattributenode',
  'insertadjacenthtml',
  'onerror',
  'onload',
  'onclick',
  'onchange',
  'onmouseover',
  'xmlhttprequest',
  'responsetext',
  'setrequestheader',
  'classlist',
  'classname',
  'domtokenlist',
  'parentnode',
  'childnodes',
  'nodelist',
  'queryselector',
  'stringify',
  'converting',
  'datetime',
  'defaultdict',
  'functools',
  'fibonacci',
  'timedelta',
  'itertools',
  'usestate',
  'useeffect',
  'uselayouteffect',
  'usereducer',
  'usecallback',
  'usememo',
  'useref',
  'settimeout',
  'setinterval',
  'setitem',
  'getitem',
  'localstorage',
  'sessionstorage',
  'unmounts',
  'lifecycle',
  'website',
  'websites',
  'url',
  'urls',
  'destructure',
  'clearinterval',
  'cleartimeout',
  'memoize',
  'memoized',
  'textarea',
  'blog_images',
  'github',
  'componentdidupdate',
  'componentdidmount',
  'componentwillunmount',
  'debounce',
  'throttle',
  'debounced',
  'debounces',
  'keyframes',
  'checkbox',
  'global_objects',
  'blog',
  'getdate',
  'typeerror',
  'toisostring',
  'setdate',
  'getelementbyid',
  'createelement',
  'defaultvalue',
  'removeeventlistener',
  'iterables',
  'scrollable',
  'queryselectorall',
  'reactdom',
  'refactor',
  'gettime',
  'yyyy-mm-dd',
  'indexof',
  'memoization',
  'referenceerror',
  'isnan',
  'onvaluechange',
  'checkbox',
  'multiline',
  'eslint',
  'google',
  'refactoring',
  'unicode',
  'username',
  'myobj',
  'isarray',
  'initialstate',
  'nextseed',
  'subarray',
  'hypot',
  'unstage',
  'keyframes',
  'cssstyledeclaration',
  'setproperty',
  'scrollbars',
  'scrollbar-width',
  'rotatey',
  'scrolltop',
  'nowrap',
  'clipboard_api',
  'copytoclipboard',
  'execcommand',
  'keydown',
  'javascript-this',
  'stringified',
  'johnsmith',
  'instanceof',
  'localecompare',
  'preordertraversal',
  'postordertraversal',
  'isleaf',
  'haschildren',
  'tofixed',
  'mycomponent',
  'initialvalue',
  'beforeeach',
  'mutationobserver',
  'removeitem',
  'requestanimationframe',
  'camelcase',
  'hashable',
  'fisher-yates',
  '6-digit',
  'grep',
  'uncommit',
  'pathspec',
  'fileglob',
  'scrollbar',
  'fullscreen',
  'requestfullscreen',
  'scrollheight',
  'overscroll-behavior-x',
  'scrollto',
  'scrolltoelement',
  'mousemove',
  'getboundingclientrect',
  'translatex',
  'roboto',
  'linux',
  'overscroll-behavior-y',
  'unicode',
  'google',
  'takeaways',
  'backend',
  'frontend',
  'codebase',
  'filepath',
  'javascript-for-in-for-of-foreach',
  '30secondsofcode',
  'cachekey',
  'memoization',
  'timeend',
  'writetext',
  'copytoclipboardasync',
  'htmlinputelement',
  'rfc4122',
  'readonly',
  'jquery',
  'hsl_and_hsv',
  'gitlens',
  'uigradients',
  'backreferences',
  'lookaheads',
  'visbug',
  'editthiscookie',
  'wcag',
  'keyup',
  'uniquevalues',
  'currenttarget',
  'myfunc',
  'readfilesync',
  'filesystem',
  'initcounter',
  'tolocaledatestring',
  'isfrozen',
  'my-website',
  'enum',
  'documentelement',
  'globals',
  'spread_syntax',
  'uniqueelements',
  'linkedlist',
  'myobject',
  'nullish',
  'caniuse',
  'myclass',
  'textcontent',
  'autocomplete',
  'arity',
  'syntaxerror',
  'abortcontroller',
  'arr2',
  'nodename',
  'inordertraversal',
  'parentnodekey',
  'insertat',
  'removeat',
  'getat',
  'previousnode',
  'nextnode',
  'insertfirst',
  'insertlast',
  'isempty',
  'javascript-deep-freeze-object',
  'toprecision',
  'prefetching',
  'valueerror',
  'stdtypes',
  'straÃŸe',
  'start_at',
  'stop_before',
  'proptypes',
  'validator',
  'createid',
  'purecomponent',
  'memoizing',
  'reactjs',
  'usedebugvalue',
  'setvalue',
  'utils',
  'createportal',
  'iscollapsed',
  'bindindex',
  'defaultindex',
  'setformattedcontent',
  'onmouseleave',
  'getcomputedstyle',
  'innerwidth',
  'innerheight',
  'isinstance',
  'dicts',
  'decapitalizes',
  'iso-8601',
  'outmin',
  'outmax',
  'inmin',
  'inmax',
  '93yates_shuffle',
  'url-friendly',
  'elementcssinlinestyle',
  'startdate',
  'base-64',
  'whitespaces',
  'innerhtml',
  'searchvalue',
  'func',
  '3-digit',
  'tolocalestring',
  'formdata',
  'argv',
  'htmlelement',
  'sha-256',
  'sha-2',
  'valueof',
  'fromentries',
  'subarrays',
  'nodejs',
  'quicksort',
  'lastindexof',
  'ungrouping',
  'uuid',
  'ietf',
];

x = Snippet.records
  .flatMap(snippet => {
    let issues = spell
      .check(snippet.fullText)
      .filter(
        word =>
          word.length > 3 &&
          word !== '-' &&
          !word.startsWith('-') &&
          !word.startsWith('_') &&
          !word.match(/^\d+$/) &&
          !word.endsWith('px') &&
          !word.endsWith('rem') &&
          !word.endsWith('vw') &&
          !word.endsWith('ms') &&
          !word.startsWith('parse') &&
          !dictionary.includes(word.toLowerCase())
      );

    return { snippet: snippet.id, issues };
  })
  .filter(({ issues }) => issues.length > 0);

fs.writeFileSync('issues.json', JSON.stringify(x, null, 2));
